# HTTP (Tomcat) port
server:
   port: ${PORT:8060}


# ----------------------------- 
# ---------
# Discovery Server Access
# ---------
#----------------------------- 
eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_URL:http://localhost:8061}/eureka/


# ----------------------------- 
# ---------
# Security
# ---------
#----------------------------- 
management:
   security:
      enabled: false


# ----------------------------- 
# ---------
# Ribbon configuration
# ---------
#----------------------------- 
# A configuration property has to be added to the application.yml file of the Spring Boot application to tell Feign to enable Hystrix
# Mandatory, activate the Load balancer server for client.
ribbon:
   eureka: 
      enabled: true


# ----------------------------- 
# ---------
# Zuul configuration
# ---------
#-----------------------------       
# The routing parameters zuul.routes.api-xxx.path and zuul.routes.api-xxx.serviceId are optional. 
# In fact, if they are not notified, Zuul will contact Eureka to deduce the default routing rules.
zuul:
   # Spring Cloud Zuul by default exposes all services registred in Eureka Server. 
   # If you would like to skip the automatic addition of every service, you have to set
   # the zuul.ignoredServices property with a pattern matched to all ignored service namSes
   # from a discovery server.
   ignoredServices: '*'
   # Service will be mapped under the /api URI
   prefix: /api
#  Uncomment to disable auto-registering all services read from Eureka
   routes:
#      test:
#         path: /redirect/**
#         url: http://google.com
      api-uaa:
         path: /uaa/**
#         sensitiveHeaders:
         serviceId: auth-server
         # Exclude authorization from sensitive headers
         sensitiveHeaders: Cookie,Set-Cookie
         stripPrefix: false
      api-employee:
         path: /employee-service/**
#         sensitiveHeaders:
         serviceId: employee-service
         sensitiveHeaders:
      api-organisation:
         path: /organization-service/**
#         sensitiveHeaders:
         serviceId: organization-service  
         sensitiveHeaders: 
#    static:
#      path: /static/**


# ----------------------------- 
# ---------
# hystrix configuration
# ---------
#-----------------------------

# //!\\ IMPORTANT //!\\
# Service Discovery Configuration
# Zuul is using service discovery there are two timeouts you need to be concerned with, 
# the Hystrix timeout (since all routes are wrapped in Hystrix commands by default) and the Ribbon timeout. 
# The Hystrix timeout needs to take into account the Ribbon read and connect timeout PLUS the total number of retries 
# that will happen for that service. By default Spring Cloud Zuul will do its best to calculate the Hystrix timeout
# for you UNLESS you specify the Hystrix timeout explicitly.
#
# When using Zuul we automatically wrap each proxied request in a hystrix command. 
# So you need to configure the hystrix timeouts to be slightly larger than the ribbon timeouts.
#
# The Hystrix timeout is calculated using the following formula :
# (ribbon.ConnectTimeout + ribbon.ReadTimeout) * (ribbon.MaxAutoRetries + 1) * (ribbon.MaxAutoRetriesNextServer + 1)
# if specifique specific : hystrix.command.${serviceID}.execution.isolation.thread.timeoutInMilliseconds
hystrix:
   command:
      default:
         execution:
            isolation:
               thread:
                  timeoutInMilliseconds: 5000


# ----------------------------- 
# ---------
# Log configuration
# ---------
#-----------------------------                     
logging:
  pattern: 
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
